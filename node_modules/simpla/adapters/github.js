!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.SimplaGithub=e()}(this,function(){"use strict";function t(t){return window.btoa(encodeURIComponent(t).replace(/%([0-9A-F]{2})/g,function(t,e){return String.fromCharCode("0x"+e)}))}function e(){return Math.random().toString(32).slice(-5)}function n(t){var n,o=[],i=function(t,n,r){var i=e()+"."+n,s="[upload "+i+"]";return o.push([i,r]),s};return n=r(t,function(t){return"string"==typeof t?t.replace(/data:image\/(.+?);base64,([A-Za-z0-9+/=]+)/g,i):t}),[n,o]}function r(t,e){if(Array.isArray(t))return t.map(function(t){return r(t,e)});if("object"==typeof t&&null!==t){var n=Object.create(null);for(var o in t)n[o]=r(t[o],e);return n}return e(t)}function o(){}var i="function"==typeof fetch?fetch.bind():function(t,e){return e=e||{},new Promise(function(n,r){function o(){var t,e=[],n=[],r={};return i.getAllResponseHeaders().replace(/^(.*?):\s*([\s\S]*?)$/gm,function(o,i,s){e.push(i=i.toLowerCase()),n.push([i,s]),t=r[i],r[i]=t?t+","+s:s}),{ok:1==(i.status/200|0),status:i.status,statusText:i.statusText,url:i.responseURL,clone:o,text:function(){return Promise.resolve(i.responseText)},json:function(){return Promise.resolve(i.responseText).then(JSON.parse)},blob:function(){return Promise.resolve(new Blob([i.response]))},headers:{keys:function(){return e},entries:function(){return n},get:function(t){return r[t.toLowerCase()]},has:function(t){return t.toLowerCase()in r}}}}var i=new XMLHttpRequest;i.open(e.method||"get",t);for(var s in e.headers)i.setRequestHeader(s,e.headers[s]);i.withCredentials="include"==e.credentials,i.onload=function(){n(o())},i.onerror=r,i.send(e.body)})},s=arguments,u=(Object.assign&&Object.assign.bind(Object),function(t){var e=t.repo,n=t.data;void 0===n&&(n="data");var r=t.uploads;void 0===r&&(r="uploads");var o=t.branch;void 0===o&&(o="master");var i=t.credentials;void 0===i&&(i=null),this.repo=e,this.branch=o,this.paths={data:n,uploads:r},this.credentials=i});u.prototype._request=function(t,e){void 0===e&&(e={});var n=e.method;void 0===n&&(n="GET");var r=e.body,o="https://api.github.com/repos/"+this.repo+"/"+t,s={Authorization:"token "+this.credentials.token};return r=r&&JSON.stringify(r),this.credentials.token?i(o,{method:n,body:r,headers:s}).then(function(t){return 204===t.status?null:t.json().then(function(e){if(!t.ok&&404!==t.status)throw e;return e})}):Promise.reject(new Error('Could not make request to GitHub, invalid token "'+this.credentials.token+'"'))},u.prototype._enqueue=function(t){return this._waitFor?this._waitFor=this._waitFor.then(t):this._waitFor=Promise.resolve().then(t),this._waitFor},u.prototype.all=function(){var t=this,e=this.paths.data.split("/"),n=e.pop(),r=e.join("/"),o=function(e){var r=e.find(function(t){return t.name===n});if(!r)throw new Error('Could not find folder "'+t.paths.data+'"');return t._request("git/trees/"+r.sha+"?recursive=1")},i=function(t){return t.tree.filter(function(t){return"blob"===t.type}).map(function(t){return"/"+t.path.replace(".json","")})};return this._enqueue(function(){return t._request("contents"+r+"?ref="+t.branch).then(o).then(i)})},u.prototype.startTransaction=function(){var t=this,n=new a({repo:this.repo,from:this.branch,credentials:this.credentials,branch:"simpla-editing-"+e(),data:this.paths.data,uploads:this.paths.uploads});return function(e){return t._request("branches/"+e).then(function(t){return t.commit.sha})}(this.branch).then(function(e){return t._request("git/refs",{method:"POST",body:{ref:"refs/heads/"+n.branch,sha:e}})}).then(function(){return n})},u.prototype.set=function(e,r){var o=this,i=n(r),s=i[0],u=i[1],a=function(t){return o._request("contents"+t+"?ref="+o.branch)},c=[""+this.paths.data+e+".json",t(JSON.stringify(s,null,2))],h=u.map(function(t){var e=t[0],n=t[1];return[o.paths.uploads+"/"+e,n]}).concat([c]),f=function(t,e){return function(n){var r=n.sha;return o._request("contents"+t,{method:"PUT",body:{message:"Updating "+t,branch:o.branch,path:t.slice(1),content:e,sha:r}})}};return Promise.all(h.map(function(t){var e=t[0],n=t[1];return o._enqueue(function(){return a(e).then(f(e,n))})})).then(function(){return r})},u.prototype.remove=function(t){var e=this,n=""+this.paths.data+t+".json",r=function(t){return e._request("contents"+t+"?ref="+e.branch)},o=function(r){var o=r.sha;return e._request("contents"+n,{method:"DELETE",body:{message:"Removing "+t,branch:e.branch,path:n.slice(1),sha:o}})};return this._enqueue(function(){return r(n).then(o).then(function(){return null})})};var a=function(t){function e(e){t.call(this,e),this.from=e.from}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.commit=function(){var t=this,e=function(){return t._request("merges",{method:"POST",body:{message:"Merging editing branch",head:t.branch,base:t.from}})},n=function(){return t._request("git/refs/heads/"+t.branch,{method:"DELETE"})};return this._enqueue(function(){return e().then(n).then(o)})},e}(u);return u});
